{"ast":null,"code":"var _jsxFileName = \"/Users/leoniangela/Downloads/Uni Year 3/Year 3 Sem 2/IT Project/ITProject/client/src/pages/Record/RecordPage.js\",\n    _s = $RefreshSig$();\n\n// Import the necessary libraries\nimport React, { useState, useEffect, Component } from \"react\";\nimport SideNav from \"../../components/SideNav\";\nimport DropFileInput from \"./dropFiles/drop-file-input/DropFileInput.jsx\";\nimport TextInsertField from './TextInsertField.js';\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport FileBase from 'react-file-base64';\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\"; // CSS imports\n\nimport \"./RecordPage.css\"; // obtain token from cookie\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cookies = new Cookies();\nconst token = cookies.get(\"TOKEN\");\nconst feedbackMessages = {\n  initial: '',\n  invalid: 'The artefact must have a valid name and a picture uploaded',\n  valid: 'Adding your artefact'\n}; // Record form to add a new Artefact\n\nconst RecordForm = () => {\n  _s();\n\n  // Initialize the navigate function\n  const navigate = useNavigate();\n  const [feedback, setFeedback] = useState(feedbackMessages.initial); // Change the artefactFiles list if a new file is added or removed\n\n  const onFileChange = files => {\n    console.log(files);\n    setRecord(record.artefactFiles = files);\n  }; // The JSON object that is being constantly updated and sent\n\n\n  const initialState = {\n    artefactName: \"\",\n    artefactDate: \"\",\n    location: \"\",\n    description: \"\",\n    //tags: \"\",\n    artefactImg: \"\"\n  }; // React hook to change the state of record\n\n  const [record, setRecord] = useState(initialState); // NOT DONE YET\n\n  function handleSubmit(e) {\n    // Prevent the user from refreshing the page when they input \"enter\"\n    e.preventDefault();\n\n    if (!isValidInput(record)) {\n      setFeedback(feedbackMessages.invalid);\n      return;\n    }\n\n    setFeedback(feedbackMessages.valid);\n\n    async function recordArtefact(e) {\n      // set configurations\n      const configuration = {\n        method: \"post\",\n        url: \"http://localhost:5100/add-artefact\",\n        data: {\n          record\n        },\n        headers: {\n          Authorization: `Bearer ${token}` // authorized route with jwt token\n\n        }\n      }; // make the API call\n\n      axios(configuration).then(result => {\n        window.location.href = \"/dashboard\";\n      }).catch(error => {\n        error = new Error();\n        console.log(error);\n      });\n    }\n\n    recordArtefact();\n  } // Change the state of the record object based on user input\n\n\n  function handleChange(event) {\n    setRecord({ ...record,\n      [event.target.name]: event.target.value\n    });\n    console.log(record);\n  }\n\n  const [sideNavOpen, setSideNavOpen] = useState(false);\n\n  const openSideNav = () => {\n    setSideNavOpen(true);\n  };\n\n  const closeSideNav = () => {\n    setSideNavOpen(false);\n  }; // Return an HTML of the Record Page\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"record-page\",\n      children: [/*#__PURE__*/_jsxDEV(SideNav, {\n        sideNavOpen: sideNavOpen,\n        closeSideNav: closeSideNav\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add Artefact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-entry-fields\",\n          children: [/*#__PURE__*/_jsxDEV(TextInsertField, {\n            handleChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-entry-fields--image-upload\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Upload Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FileBase, {\n              type: \"file\",\n              name: \"artefactImg\",\n              multiple: false,\n              onDone: _ref => {\n                let {\n                  base64\n                } = _ref;\n                return setRecord({ ...record,\n                  artefactImg: base64\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: record.artefactImg,\n                alt: \"No Images have been Uploaded Yet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: feedback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"response-button\",\n          id: \"button\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/dashboard`,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"response-button__cancel\",\n              type: \"submit\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"response-button__submit\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(RecordForm, \"ESzB0IDvpnVoXeURMNCnDf7UylA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = RecordForm;\n\nfunction isValidInput(data) {\n  return data.artefactName !== '' && data.artefactImg !== '';\n}\n\nexport default RecordForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecordForm\");","map":{"version":3,"names":["React","useState","useEffect","Component","SideNav","DropFileInput","TextInsertField","Link","useNavigate","FileBase","axios","Cookies","cookies","token","get","feedbackMessages","initial","invalid","valid","RecordForm","navigate","feedback","setFeedback","onFileChange","files","console","log","setRecord","record","artefactFiles","initialState","artefactName","artefactDate","location","description","artefactImg","handleSubmit","e","preventDefault","isValidInput","recordArtefact","configuration","method","url","data","headers","Authorization","then","result","window","href","catch","error","Error","handleChange","event","target","name","value","sideNavOpen","setSideNavOpen","openSideNav","closeSideNav","base64"],"sources":["/Users/leoniangela/Downloads/Uni Year 3/Year 3 Sem 2/IT Project/ITProject/client/src/pages/Record/RecordPage.js"],"sourcesContent":["// Import the necessary libraries\nimport React, { useState, useEffect, Component } from \"react\";\nimport SideNav from \"../../components/SideNav\";\nimport DropFileInput from \"./dropFiles/drop-file-input/DropFileInput.jsx\";\nimport TextInsertField from './TextInsertField.js';\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport FileBase from 'react-file-base64';\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\n\n// CSS imports\nimport \"./RecordPage.css\";\n\n// obtain token from cookie\nconst cookies = new Cookies();\nconst token = cookies.get(\"TOKEN\");\n\nconst feedbackMessages = {\n    initial: '',\n    invalid: 'The artefact must have a valid name and a picture uploaded',\n    valid:   'Adding your artefact'\n}\n\n// Record form to add a new Artefact\nconst RecordForm = () => {\n  // Initialize the navigate function\n  const navigate = useNavigate();\n  const [feedback, setFeedback] = useState(feedbackMessages.initial);\n\n  // Change the artefactFiles list if a new file is added or removed\n  const onFileChange = (files) => {\n    console.log(files);\n    setRecord((record.artefactFiles = files));\n  };\n\n  // The JSON object that is being constantly updated and sent\n  const initialState = {\n    artefactName: \"\",\n    artefactDate: \"\",\n    location: \"\",\n    description: \"\",\n    //tags: \"\",\n    artefactImg: \"\",\n  };\n\n  // React hook to change the state of record\n  const [record, setRecord] = useState(initialState);\n\n  // NOT DONE YET\n  function handleSubmit(e) {\n\n    // Prevent the user from refreshing the page when they input \"enter\"\n    e.preventDefault();\n\n    if (!isValidInput(record)) {\n        setFeedback(feedbackMessages.invalid);\n        return;\n    }\n\n    setFeedback(feedbackMessages.valid);\n    async function recordArtefact (e) {\n      // set configurations\n      const configuration = {\n        method: \"post\",\n        url: \"http://localhost:5100/add-artefact\",\n        data: {\n          record\n        },\n        headers: {\n          Authorization: `Bearer ${token}`, // authorized route with jwt token\n        },\n      };\n\n\n      // make the API call\n      axios(configuration)\n      .then((result) => {\n        window.location.href = \"/dashboard\"\n      })\n      .catch((error) => {\n        error = new Error();\n        console.log(error)\n      });\n    }\n\n    recordArtefact()\n  }\n\n  // Change the state of the record object based on user input\n  function handleChange(event) {\n    setRecord({ ...record, [event.target.name]: event.target.value });\n    console.log(record);\n  }\n\n  const [sideNavOpen, setSideNavOpen] = useState(false);\n\n  const openSideNav = () => {\n    setSideNavOpen(true);\n  };\n\n  const closeSideNav = () => {\n    setSideNavOpen(false);\n  };\n\n  // Return an HTML of the Record Page\n  return (\n    <>\n      <div className=\"record-page\">\n        {/* Render the side nav*/}\n        <SideNav sideNavOpen={sideNavOpen} closeSideNav={closeSideNav} />\n\n        {/* The form that the user to send to database */}\n        <form onSubmit={(e) => handleSubmit(e)}>\n          <h1>Add Artefact</h1>\n          <div className=\"data-entry-fields\">\n            <TextInsertField handleChange={handleChange}/>\n            {/* Upload Images */}\n            <div className='data-entry-fields--image-upload'>\n              <label>Upload Image</label>\n              <FileBase type=\"file\" name=\"artefactImg\" multiple={false} onDone={({ base64 }) => setRecord({ ...record, artefactImg: base64 })} />\n              <div><img src={record.artefactImg} alt=\"No Images have been Uploaded Yet\" /></div>\n            </div>\n          </div>\n\n          {/* This is the cancel button it just redirects to dashboard */}\n          <p>{feedback}</p>\n          <div className=\"response-button\" id=\"button\">\n            <Link to={`/dashboard`}>\n              <button className=\"response-button__cancel\" type=\"submit\">\n                Cancel\n              </button>\n            </Link>\n            <button className=\"response-button__submit\" type=\"submit\">\n              Submit\n            </button>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nfunction isValidInput(data) {\n    return (data.artefactName !== '' && data.artefactImg !== '');\n}\n\n\nexport default RecordForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}