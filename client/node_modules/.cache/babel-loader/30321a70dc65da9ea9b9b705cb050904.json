{"ast":null,"code":"var _jsxFileName = \"/Users/leoniangela/Downloads/Uni Year 3/Year 3 Sem 2/IT Project/ITProject/client/src/pages/EditPage/EditPage.js\",\n    _s = $RefreshSig$();\n\n// Import the necessary libraries\nimport React, { useState, useEffect, Component } from \"react\";\nimport SideNav from \"../../components/SideNav\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport TextUpdateField from \"./TextUpdateField.js\";\nimport FileBase from \"react-file-base64\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\"; // CSS imports\n// obtain token from cookie\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cookies = new Cookies();\nconst token = cookies.get(\"TOKEN\");\nconst feedbackMessages = {\n  initial: \"\",\n  invalid: \"The artefact must have a valid name and a picture uploaded\",\n  valid: \"Updating your artefact\"\n};\n\nconst EditPage = () => {\n  _s();\n\n  const [feedback, setFeedback] = useState(feedbackMessages.initial); // id constant to send request based on the specific artefact id\n\n  const {\n    _id\n  } = useParams();\n  const dummyData = {\n    artefactName: \"Rose\",\n    location: \"Japan\"\n  };\n  const initialState = {\n    artefactName: \"\",\n    artefactDate: \"\",\n    location: \"\",\n    description: \"\",\n    artefactImg: \"\",\n    memories: \"\"\n  }; // NOT DONE YET\n\n  function handleSubmit(e) {\n    // Prevent the user from refreshing the page when they input \"enter\"\n    e.preventDefault();\n\n    if (!isValidInput(record)) {\n      setFeedback(feedbackMessages.invalid);\n      return;\n    }\n\n    setFeedback(feedbackMessages.valid);\n\n    async function updateArtefact(e) {\n      // set configurations\n      const configuration = {\n        method: \"patch\",\n        url: `http://localhost:5100/${_id}`,\n        data: {\n          record\n        },\n        headers: {\n          Authorization: `Bearer ${token}` // authorized route with jwt token\n\n        }\n      }; // make the API call\n\n      axios(configuration).then(result => {\n        window.location.href = \"/dashboard\";\n      }).catch(error => {\n        error = new Error();\n        console.log(error);\n      });\n    }\n\n    updateArtefact();\n  } // React hook to change the state of record\n\n\n  const [record, setRecord] = useState(initialState); // Hook to get the data\n\n  const configuration = {\n    method: \"get\",\n    url: `http://localhost:5100/${_id}`,\n    headers: {\n      Authorization: `Bearer ${token}` // authorized route with jwt token\n\n    }\n  };\n  useEffect(function () {\n    async function updatePage() {\n      try {\n        const response = await axios(configuration);\n        console.log(JSON.stringify(response.data));\n        setRecord(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    updatePage();\n  }, []); // Change the state of the record object based on user input\n\n  function handleChange(event) {\n    setRecord({ ...record,\n      [event.target.name]: event.target.value\n    });\n    console.log(record);\n  }\n\n  console.log({\n    record\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"record-page\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Edit \", record.artefactName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-entry-fields\",\n          children: [/*#__PURE__*/_jsxDEV(TextUpdateField, {\n            handleChange: handleChange,\n            initialData: record\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-entry-fields--image-upload\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Upload Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FileBase, {\n              type: \"file\",\n              name: \"artefactImg\",\n              multiple: false,\n              onDone: _ref => {\n                let {\n                  base64\n                } = _ref;\n                return setRecord({ ...record,\n                  artefactImg: base64\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: record.artefactImg.imgURL,\n                alt: \"No Images have been Uploaded Yet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"response-button\",\n          id: \"button\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/dashboard`,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"response-button__cancel\",\n              type: \"submit\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"response-button__submit\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n\n  function isValidInput(data) {\n    return data.artefactName !== \"\" && data.artefactImg !== \"\";\n  }\n};\n\n_s(EditPage, \"9RG9bKR8iUE4r/oBWX3l2Fq4mNU=\", false, function () {\n  return [useParams];\n});\n\n_c = EditPage;\nexport default EditPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPage\");","map":{"version":3,"names":["React","useState","useEffect","Component","SideNav","Link","useNavigate","useParams","TextUpdateField","FileBase","axios","Cookies","cookies","token","get","feedbackMessages","initial","invalid","valid","EditPage","feedback","setFeedback","_id","dummyData","artefactName","location","initialState","artefactDate","description","artefactImg","memories","handleSubmit","e","preventDefault","isValidInput","record","updateArtefact","configuration","method","url","data","headers","Authorization","then","result","window","href","catch","error","Error","console","log","setRecord","updatePage","response","JSON","stringify","handleChange","event","target","name","value","base64","imgURL"],"sources":["/Users/leoniangela/Downloads/Uni Year 3/Year 3 Sem 2/IT Project/ITProject/client/src/pages/EditPage/EditPage.js"],"sourcesContent":["// Import the necessary libraries\nimport React, { useState, useEffect, Component } from \"react\";\nimport SideNav from \"../../components/SideNav\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport TextUpdateField from \"./TextUpdateField.js\";\nimport FileBase from \"react-file-base64\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\n\n// CSS imports\n\n// obtain token from cookie\nconst cookies = new Cookies();\nconst token = cookies.get(\"TOKEN\");\n\nconst feedbackMessages = {\n  initial: \"\",\n  invalid: \"The artefact must have a valid name and a picture uploaded\",\n  valid: \"Updating your artefact\",\n};\n\nconst EditPage = () => {\n  const [feedback, setFeedback] = useState(feedbackMessages.initial);\n\n  // id constant to send request based on the specific artefact id\n  const { _id } = useParams();\n\n  const dummyData = {\n    artefactName: \"Rose\",\n    location: \"Japan\",\n  };\n\n  const initialState = {\n    artefactName: \"\",\n    artefactDate: \"\",\n    location: \"\",\n    description: \"\",\n    artefactImg: \"\",\n    memories: \"\",\n  };\n\n  // NOT DONE YET\n  function handleSubmit(e) {\n    // Prevent the user from refreshing the page when they input \"enter\"\n    e.preventDefault();\n\n    if (!isValidInput(record)) {\n      setFeedback(feedbackMessages.invalid);\n      return;\n    }\n\n    setFeedback(feedbackMessages.valid);\n    async function updateArtefact(e) {\n      // set configurations\n      const configuration = {\n        method: \"patch\",\n        url: `http://localhost:5100/${_id}`,\n        data: {\n          record,\n        },\n        headers: {\n          Authorization: `Bearer ${token}`, // authorized route with jwt token\n        },\n      };\n\n      // make the API call\n      axios(configuration)\n        .then((result) => {\n          window.location.href = \"/dashboard\";\n        })\n        .catch((error) => {\n          error = new Error();\n          console.log(error);\n        });\n    }\n\n    updateArtefact();\n  }\n\n  // React hook to change the state of record\n  const [record, setRecord] = useState(initialState);\n\n  // Hook to get the data\n  const configuration = {\n    method: \"get\",\n    url: `http://localhost:5100/${_id}`,\n    headers: {\n      Authorization: `Bearer ${token}`, // authorized route with jwt token\n    },\n  };\n\n  useEffect(function () {\n    async function updatePage() {\n      try {\n        const response = await axios(configuration);\n        console.log(JSON.stringify(response.data));\n        setRecord(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    updatePage();\n  }, []);\n\n  // Change the state of the record object based on user input\n  function handleChange(event) {\n    setRecord({ ...record, [event.target.name]: event.target.value });\n    console.log(record);\n  }\n\n  console.log({ record });\n\n  return (\n    <>\n      <div className=\"record-page\">\n        {/* The form that the user to send to database */}\n        <form onSubmit={(e) => handleSubmit(e)}>\n          <h1>Edit {record.artefactName}</h1>\n          <div className=\"data-entry-fields\">\n            {/* TEXT DATA*/}\n            <TextUpdateField handleChange={handleChange} initialData={record} />\n\n            {/* Upload Images */}\n\n            <div className=\"data-entry-fields--image-upload\">\n              <label>Upload Image</label>\n              <FileBase\n                type=\"file\"\n                name=\"artefactImg\"\n                multiple={false}\n                onDone={({ base64 }) =>\n                  setRecord({ ...record, artefactImg: base64 })\n                }\n              />\n              <div>\n                <img\n                  src={record.artefactImg.imgURL}\n                  alt=\"No Images have been Uploaded Yet\"\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* This is the cancel button it just redirects to dashboard */}\n          {/*<p>{feedback}</p>*/}\n          <div className=\"response-button\" id=\"button\">\n            <Link to={`/dashboard`}>\n              <button className=\"response-button__cancel\" type=\"submit\">\n                Cancel\n              </button>\n            </Link>\n            <button className=\"response-button__submit\" type=\"submit\">\n              Submit\n            </button>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n\n  function isValidInput(data) {\n    return data.artefactName !== \"\" && data.artefactImg !== \"\";\n  }\n};\n\nexport default EditPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}